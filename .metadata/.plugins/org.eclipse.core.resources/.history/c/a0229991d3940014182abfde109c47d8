package cg;
import java.util.ArrayList;

import cg.Interval1D;

public class Angles {
	
	public static void main(String[] args) {
		
		//System.out.println(signed_angl3);
		//System.out.println(find_angle(p1, p2, center));
		
	}
	
	public static ArrayList<Interval1D> ComputeInterval(Point p1, Point p2, Point center) {
		
		//Point center = new Point(0,0);
		//Point p1 = new Point(1,1);
		//Point p2 = new Point(0,-1);
				
		ArrayList<Interval1D> result = new ArrayList<Interval1D>();
		
		double signed_angl = Math.atan2(p2.y, p2.x) - Math.atan2(p1.y, p1.x);
		
		if (signed_angl < 0)
			signed_angl = signed_angl + 2 * Math.PI;
		
		if (signed_angl < 0 || signed_angl > Math.PI) {
			Point temp = p1;
			p1 = p2;
			p2 = temp;
		}
		
		double start = Math.atan2(p1.y, p1.x) - Math.atan2(center.y, center.x);
		double end = Math.atan2(p2.y, p2.x) - Math.atan2(center.y, center.x);
		
		if (start < 0)
			start = start + 2 * Math.PI;
		
		if (end < 0)
			end = end + 2 * Math.PI;
		
		
		if (start > end) {
			result.add(new Interval1D(0, end, -1));
			result.add(new Interval1D(start, 2 * Math.PI, -1));
		} else {
			result.add(new Interval1D(start, end, -1));
		}
		
		return result;
		
	}
	
}
