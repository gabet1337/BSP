package cg;
import java.util.ArrayList;

import cg.Interval1D;

public class Angles {
	
	public static void main(String[] args) {
		
		//System.out.println(signed_angl3);
		//System.out.println(find_angle(p1, p2, center));
		
		for (Interval1D i : ComputeInterval(222,231,0,0,138,125))
		{
			System.out.println(i);
		}
		
	}
	
	public static ArrayList<Interval1D> ComputeInterval(double p1x, double p1y, double p2x, double p2y, double eyex, double eyey) {

		//Point center = new Point(0,0);
		//Point p1 = new Point(1,1);
		//Point p2 = new Point(0,-1);
		p1x -= eyex;
		p1y -= eyey;
		p2x -= eyex;
		p2y -= eyey;
		eyex = eyey = 0;
		ArrayList<Interval1D> result = new ArrayList<Interval1D>();
		
		double signed_angl = Math.atan2(p2y, p2x) - Math.atan2(p1y, p1x);
		//System.out.println(signed_angl);
		
		if (signed_angl < 0)
			signed_angl = signed_angl + 2 * Math.PI;
		
		if (signed_angl < 0 || signed_angl > Math.PI) {
			double tempx = p1x, tempy = p1y;
			p1x = p2x;
			p1y = p2y;
			p2x = tempx;
			p2y = tempy;
		}
		
		double start = Math.atan2(p1y, p1x) - Math.atan2(eyey, eyex);
		double end = Math.atan2(p2y, p2x) - Math.atan2(eyey, eyex);
		
		System.out.println("start" + start);
		System.out.println("end" + end);
		
		if (start < 0)
			start = start + 2 * Math.PI;
		
		if (end < 0)
			end = end + 2 * Math.PI;
		
		
		if (start > end) {
			result.add(new Interval1D(0, end, null));
			result.add(new Interval1D(start, 2 * Math.PI, -1));
		} else {
			result.add(new Interval1D(start, end, -1));
		}
		
		return result;
		
	}
	
}
